on: workflow_dispatch

jobs: 
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0.38
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        
    steps: 
    - name: checkout
      uses: actions/checkout@v4
      
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20.11.0'

    - name: Check Running containers
      run: docker ps
        
    - name: Build the Docker images
      run: docker-compose build
      
    - name: Run the docker compose
      run: docker-compose up -d

    - name: Create MySQL User
      run: |
        echo "CREATE USER 'newuser'@'%' IDENTIFIED BY 'newpassword';" | mysql -h 127.0.0.1 -u ${{ secrets.DB_USERNAME }} -p${{ secrets.DB_PASSWORD }}
        echo "GRANT ALL PRIVILEGES ON *.* TO 'newuser'@'%';" | mysql -h 127.0.0.1 -u ${{ secrets.DB_USERNAME }} -p${{ secrets.DB_PASSWORD }}
        echo "FLUSH PRIVILEGES;" | mysql -h 127.0.0.1 -u ${{ secrets.DB_USERNAME }} -p${{ secrets.DB_PASSWORD }}
        
    - name: Run database migration
      run: |
        mysql -h 127.0.0.1 -u ${{secrets.DB_USERNAME}} -p${{ secrets.DB_PASSWORD }} -e "
          GRANT ALL PRIVILEGES ON your_database.* TO '${{ secrets.DB_USERNAME }}'@'%';
          FLUSH PRIVILEGES;
        "
    - name: Install Dependencies
      run: npm i
      
    - name: Run tests
      env:
          DB_USERNAME: ${{secrets.DB_USERNAME}}
          DB_PASSWORD: ${{secrets.DB_PASSWORD}}
          DB_NAME: test_task
          PORT: 5030
      run: npm run test
      
    - name: finish docker down
      run: docker-compose down
